{"remainingRequest":"C:\\DATA ADIT\\Project EKID\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\DATA ADIT\\Project EKID\\frontend\\src\\view\\auth\\login_pages\\Login-1.vue?vue&type=template&id=14f99474&","dependencies":[{"path":"C:\\DATA ADIT\\Project EKID\\frontend\\src\\view\\auth\\login_pages\\Login-1.vue","mtime":1701012514964},{"path":"C:\\DATA ADIT\\Project EKID\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1699792569128},{"path":"C:\\DATA ADIT\\Project EKID\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1699792543961},{"path":"C:\\DATA ADIT\\Project EKID\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1699792569128},{"path":"C:\\DATA ADIT\\Project EKID\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1699792543949}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}